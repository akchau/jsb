"""
–ú–æ–¥—É–ª—å —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç–∞–Ω—Ü–∏–π
"""
from telegram import InlineKeyboardButton, Update, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from src.bot import constants
from src.controller.controller_types import StationsDirection, DirectionType, StationActionEnum
from src.init_app import get_app_data


async def register_station(update: Update, _: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞–Ω—Ü–∏–∏.
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="–ò–∑ –ú–æ—Å–∫–≤—ã üè°üöÑüè¢",
                callback_data=f"{constants.REGISTER_STATION_WITH_DIRECTION}/{StationsDirection.FROM_MOSCOW}"
            ),
            InlineKeyboardButton(
                text="–í –ú–æ—Å–∫–≤—É üè¢üöÑüè°",
                callback_data=f"{constants.REGISTER_STATION_WITH_DIRECTION}/{StationsDirection.TO_MOSCOW}"
            )
        ],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üî¥‚¨ÖÔ∏è", callback_data=str(constants.ADMIN))]
    ]
    keyboard = InlineKeyboardMarkup(buttons)
    await update.callback_query.answer()
    await update.callback_query.edit_message_text(text="–ù–æ–≤–∞—è —Å—Ç–∞–Ω—Ü–∏—è üÜï",
                                                  reply_markup=keyboard)
    return constants.REGISTER_STATION


async def register_station_with_direction(update: Update, _: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç–∞–Ω—Ü–∏–π –æ—Ç –ú–æ—Å–∫–≤—ã.
    :param update:
    :param _:
    :return:
    """

    query = update.callback_query
    data = query.data
    direction = data.split("/")[1]

    stations = await get_app_data().controller.get_stations(direction, for_registration=True)

    buttons = [
        *[[InlineKeyboardButton(text=station.title,
                                callback_data=(f"{constants.REGISTERED_STATIONS_WITH_DIRECTION}/{direction}/"
                                               f"{StationActionEnum.REGISTER}/{station.code}"))]
          for station in stations],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è üÜï‚¨ÖÔ∏è", callback_data=str(constants.REGISTER_STATION))],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üî¥‚¨ÖÔ∏è", callback_data=str(constants.ADMIN))]
    ]
    keyboard = InlineKeyboardMarkup(buttons)

    text_direction = DirectionType(direction=direction).get_text_direction()

    await update.callback_query.answer()
    await update.callback_query.edit_message_text(text=f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ {text_direction}", reply_markup=keyboard)
    return constants.REGISTER_STATION_WITH_DIRECTION
